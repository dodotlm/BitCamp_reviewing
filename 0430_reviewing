## 강의 중 다시 돌아봐야 할 포인트

1. 배열의 복사에서 깊은 복사와 얕은 복사가 있는데 
   얕은 복사는 같은 힙 영역의 배열 객체를 서로 다른 주소값으로 가리키고 있는 것이고
   깊은 복사는 아예 힙 영역의 객체를 따로 만들어서 서로 다른 주소값에 서로 다른 객체를(물론 보여지는 것은 같음) 가리키고 있는 것이다.
2. 그 덕에 얕은 복사는 같은 것을 가리키고 있기 때문에 어느 한 쪽이 갓을 다른 것으로 초기화 되어 버리면 다른 한 쪽도 그걸로 초기화 되어 버린다.
   같은 힙 영역의 객체를 바라보고 있기 때문이다.

얕은 복사는 그냥 대입하는 거라고 보면 되고
깊은 복사는 배열1 = 배열2.clone()라고 보면 된다.

3. 기존 배열의 일부만 덮어씌우기
   String.arraycopy(복사할 원본대상, 복사할 원본배열의 시작, 복사될 곳, 복사될 곳의 시작, 복사할 길이)

4. 배열 중 중복된 값을 걸러낼 때 아이디어
   반복문으로 쭉 확인하다가 조건문으로 만약에 같은 것을 캐치해 냈다 -> 바깥 반복문의 숫자를 하나 줄이고, break 해버린다.

5. default 접근제어자는 다른 제어자들처럼 명시해서 사용하는 것이 아닌 명시하지 않은 제어자가 default 제어자이다.
   public > protected > default > private (private이 보안성이 제일 좋다.)

6.       같은 클래스   같은 패키지 클래스   자식 클래스     그외

public        O              O                O           O

protected     O              O                O           X

default       O              O                X           X

private       O              X                X           X



7. void로 리턴타입이 지정된 메소드는 return 구문을 가지면 안된다. return을 사용하면 에러가 발생된다.

8. 클래스는 대문자! 변수와 메소드는 소문자!로 시작

9. 같은 패키지 안에 선언된 클래스는 import 구문이 필요없다.

10. [접근 제어자] class [클래스 이름] 으로 구현되어 있는 상단 부분에
    [접근 제어자] class [클래스 이름] extends [상속받을 어미 클래스] 로 상속해준 클래스를 호출시킬 수 있으며

    protected로 가로막혀 있는 변수나 메소드들을 super 키워드로 super.메소드()를 만들어 사용할 수 있다.






   
