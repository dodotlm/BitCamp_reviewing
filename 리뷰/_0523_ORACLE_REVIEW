## 집합 연산자

- 여기서 집합 연산자는 합집합, 교집합, 차집합 3가지가 있다.
- 보통 형태는 쿼리1 집합 연산자 쿼리2 의 형태로 이루어지게 된다.

SELECT ~
FROM
집합 연산자
SELECT ~
FROM

대충 이런식이다.


- 합집합 (UNION, UNION ALL)
쿼리1 내용과 쿼리2 내용을 합쳐주는 연산자이다.
다만 쿼리1의 양식과 쿼리2의 양식을 똑같이 맞춰줘야 한다. 참고로 이건 모든 집합 연산자의 특징이기도 하다.
UNION은 중복된 내용을 한번만 출력해준다. 하지만 UNION ALL은 중복된 내용을 또 출력해준다.

- 차집합 (MINUS)
쿼리1 내용에서 쿼리2 내용을 제거하는 연산자이다.

- 교집합 (INTERSECT)
쿼리1의 내용과 쿼리2의 내용 중 둘 다 해당되는 경우만 남기는 연산자이다.


## 오라클의 자료형

- 오라클의 자료형
자바에도 기본 자료형 참조 자료형들이 있듯이 여기도 당연히 자료형이 있다.

CHAR(길이) : 1BYTE 단위의 문자를 저장하고 사용할 수 있게 한다.
VARCHAR(바이트단위의 길이) : 4000BYTE만큼의 문자열을데이터를 저장할 수 있게 한다.
NUMBER(전체자리수) : 최대 38자리까지 입력 가능한 정수타입
NUMBER(전체자리수, 소수점뒷자리수) : 최대 38자리까지 입력 가능한 실수타입
DATE : 날짜 형식 저장해주는 자료형
등등...이 있다.



## 단일행 함수

하나의 데이터를 받아서 하나의 결과값을 리턴하는 함수이다.

- 문자함수
문자함수에는 약 3가지가 있다. LOWER(데이터명), UPPER(데이터명), INITCAP(데이터명)
LOWER은 소문자로 UPPER는 대문자로 INITCAP는 첫 글자만 대문자로 바꿔주는 함수이다.

- 문자 연산 함수
CONCAT(데이터명1, 데이터명2) 함수는 한 번에 2개의 데이터를 합치는데 주로 사용된다. 하지만 2개 이상도 가능하다.
CONCAT(데이터명1, 데이터명2 || 데이터명3 || 데이터명4 || 데이터명5 .....) 이런 식으로 무한 증식이 가능하다.

SUBSTR(데이터명, 몇 번째 글자부터 자를까요, 몇 개를 자를까요) 함수는 문자열 데이터를 자르는데 사용된다. 바리에이션이 아주 많다.
SUBSTR(데이터명, 2) : 2번째 글자부터 보여줄께요
SUBSTR(데이터명, -2) : 뒤에서 2번째 글자부터 가장 처음까지 보여줄께요
SUBSTR(데이터명, 2 , 2) : 2번째 글자부터 2개 보여줄께요
SUBSTR(데이터명, -2, 2) : 뒤에서 2번째 글자부터 2개를 보여줄께요.

LENGTH(데이터명) : 데이터의 길이를 리턴해준다.
LENGTHB(데이터명) : 데이터의 길이를 바이트 단위로 리턴을 한다.

INSTR(데이터명, 문자, 몇번째 문자 이후로 검색할까요, 찾을 문자가 여러번 문자열에 있다면 몇번째 문자의 위치를 말씀드릴까여) : 데이터에서 문자가 몇 번째에 있는지 알려주는 함수
INSTR("ABCDABCDABCDABCD" , 'B') --> 2
INSTR("ABCDABCDABCDABCD" , 'B', 6) --> 10
INSTR("ABCDABCDABCDABCD" , 'B', 6, 4) --> 14
이렇게 여러가지로 배리에이션이 있다.

TRIM() 함수는 특정 부분에서의 문자나 숫자들을 제거하는 함수이다.
TRIM(LEADING '제거할 문자나 숫자' FROM 데이터명) : 데이터 처음부터 검사했을 때 제거할게 있으면 제거하고 다른게 나오는 순간 그대로 출력해준다.
TRIM(TRAILING '제거할 문자나 숫자' FROM 데이터명) : 데이터 끝부터 검사했을 때 제거할게 있으면 제거하고 다른게 나오는 순간 그대로 출력해준다.
TRIM(BOTH '제거할 문자나 숫자' FROM 데이터명) : 데이터 처음과 끝부터 검사했을 때 제거할게 있으면 제거하고 다른게 나오는 순간 그대로 출력해준다.
TRIM(데이터명) : 데이터 앞과 뒤에 공백이 있다면 싹 없애준다.

LPAD(데이터, 길이, 문자) : 데이터의 왼쪽에 해당 문자를 (데이터 길이 - 지정한 길이)만큼 붙여준다.
RPAD(데이터, 길이, 문자) : 데이터의 오른쪽에 해당 문자를 (데이터 길이 - 지정한 길이)만큼 붙여준다.
단, (데이터 길이 - 지정한 길이)가 0보다 작으면 문자를 붙여주지 않는다.

## 문자열 치환 함수

TRANSLATE와 REPLACE 함수가 있다. 거의 비슷한데 큰 차이가 하나 있다.
TRANSLATE(데이터명, 치환할 문자, 채울문자) -> EX) TRANSLATE('WORLD OF WAR', 'WO', '--') => --RLD -F -AR
REPLACE(데이터명, 치환할 문자열, 채울문자열) -> EX) TRANSLATE('WORLD OF WAR', 'WO', '--') => --RLD OF WAR
일단 치환할 문자를 한개가 아니라 두개를 썼다. 그렇기에 채울문자도 각각 따로따로 각 문자에 대응되게 된다.
예를 들어 TRANSLATE('WORLD OF WAR', 'WO', '-*')라고 했으면 -*RLD *F -AR 로 결과값이 나오게 된다.
REPLACE는 조금 다르다 문자가 아니라 문자열로 보기 때문에 저렇게 붙여 쓴 것을 각각의 단어가 아니라 문자열로 본다.

## 숫자함수

다 아는 함수들이구먼

ROUND(데이터, 소수점 자리수) : 지정된 소수점 자리수까지 반올림한다.
TRUNC(데이터, 소수점 자리수) : 지정된 소수점 자리수까지 버림한다.
MOD(데이터1, 데이터2) : 나누기
POWER(데이터1, 데이터2) : 제곱
CEIL(데이터) : 데이터 보다 큰 가장 작은 수
FLOOR(데이터) : 데이터 보다 작은 가장 큰 수
ABS(데이터) : 절댓값
SQRT(데이터) : 루트
SIGN(데이터) : 음수 양수 0 구분























