## 오늘 수업 중 다시 보아야 하는 부분

객체타입.valueOf(바꿔야할 변수);
하면 바꿔야할 기본 자료형 변수를 객체 타입 변수로 탈 바꿈 할 수 있게 해준다.
이거 존나 쓰일 것 같은데 알아둬야 한다!!!







## BigInteger

 - 19자리 이상의 대용량 숫자를 이용할 때는 BigInteger 클래스를 이용한다.
1. BigInteger객체를 생성해주고
// 1-1. 생성자를 통한 객체 생성
		BigInteger bigInt1 = new BigInteger("초깃값");
// 1-2. valueOf 메소드를 통한 객체 생성
		BigInteger bigInt2 = BigInteger.valueOf(초깃값);

2. 그 안의 다양한 연산 메소드들을 이용하면 된다.

toString() : 문자열로 변환
toByteArray() : 바이트배열로 변환
intValue() : int형으로 변환
longValue() : long형으로 변환
floatValue() : float형으로 변환
doubleValue() : double형으로 변환
BigInteger add(BigInteger val) : 덧셈연산
BigInteger subtract(BigInteger val) : 뺄셈연산
BigInteger multiply(BigInteger val) : 곱셈연산
BigInteger divide(BigInteger val) : 나눗셈연산(몫)
BigInteger remainder(BigInteger val) : 나머지연산


## BigDecimal

 - 실수형을 굉장히 정밀하게 표현할 수 있게 한다.

intValue() : int형으로 변환
longValue() : long형으로 변환
floatValue() : float형으로 변환
doubleValue() : double형으로 변환
BigDecimal add(BigDecimal val) : 덧셈연산
BigDecimal subtract(BigDecimal val) : 뺄셈연산
BigDecimal multiply(BigDecimal val) : 곱셈연산
BigDecimal divide(BigDecimal val) : 나눗셈연산(몫)
BigDecimal remainder(BigDecimal val) : 나머지연산


## divide(), setScale()

 - 반올림모드를 가지고 있는 클래스









